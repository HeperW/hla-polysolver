#!/bin/sh


DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
#### check if an appropriate number of arguments were passed ####

if [ $# -ne 7 ]; then
        echo 1>&2 Usage: $0 bam race includeFreq build format insertCalc outDir
	echo "	-bam: path to the BAM file to be used for HLA typing"
	echo "	-race: ethnicity of the individual (Caucasian, Black, Asian or Unknown)"
	echo "	-includeFreq: flag indicating whether population-level allele frequencies should be used as priors (0 or 1)"
	echo "	-build: reference genome used in the BAM file (hg18 or hg19)"
	echo "	-format: fastq format (STDFQ, ILMFQ, ILM1.8 or SLXFQ; see Novoalign documentation)"
	echo "	-insertCalc: flag indicating whether empirical insert size distribution should be used in the model (0 or 1)"
	echo "	-outDir: output directory"
        exit 127
fi

echo "Environment variables"
echo "  -DATA_DIR: POLYSOLVER data directory = $DATA_DIR"
echo "  -GATK_DIR: directory containing the GATK jar files = $GATK_DIR"
echo "  -NUM_THREADS: number of threads = $NUM_THREADS"          
                                                                   
bam=$1
race=$2
includeFreq=$3
build=$4
format=$5
insertCalc=$6
outDir=$7

ids=$DATA_DIR/ids
tag_file=$DATA_DIR/abc_v14.uniq


mkdir $outDir

var=`cat $ids`


echo -n -e "get first winners\n"
date

rm $outDir/counts1.R0k6

for i in $var; do
        a=`tail -1 $outDir/$i.lik1 | cut -f2`
        echo -n -e "$i\t$a\n" >> $outDir/counts1.R0k6
done

winner1_a=`sort -k2,2rn $outDir/counts1.R0k6 | grep hla_a | head -1 | cut -f1`
winner1_b=`sort -k2,2rn $outDir/counts1.R0k6 | grep hla_b | head -1 | cut -f1`
winner1_c=`sort -k2,2rn $outDir/counts1.R0k6 | grep hla_c | head -1 | cut -f1`

date


# second allele calculations

echo -n -e "calculating lik2\n"

$DIR/../scripts/second_allele_calculations.pl $race $outDir/counts1.R0k6 $ids 1 $DIR/.. $outDir

date

echo -n -e "get second winners\n"

rm $outDir/counts2.R0k6

for i in $var; do
        a=`tail -1 $outDir/$i.lik2 | cut -f2`
        echo -n -e "$i\t$a\n" >> $outDir/counts2.R0k6
done

winner2_a=`sort -k2,2rn $outDir/counts2.R0k6 | grep hla_a | head -1 | cut -f1`
winner2_b=`sort -k2,2rn $outDir/counts2.R0k6 | grep hla_b | head -1 | cut -f1`
winner2_c=`sort -k2,2rn $outDir/counts2.R0k6 | grep hla_c | head -1 | cut -f1`

echo -n -e "winners1\t$winner1_a\t$winner1_b\t$winner1_c\n"
echo -n -e "winners2\t$winner2_a\t$winner2_b\t$winner2_c\n"


if [ $includeFreq == 1 ]; then

	echo -n -e "HLA-A\t$winner1_a\t$winner2_a\nHLA-B\t$winner1_b\t$winner2_b\nHLA-C\t$winner1_c\t$winner2_c\n" > $outDir/winners.hla.txt

else

	echo -n -e "HLA-A\t$winner1_a\t$winner2_a\nHLA-B\t$winner1_b\t$winner2_b\nHLA-C\t$winner1_c\t$winner2_c\n" > $outDir/winners.hla.nofreq.txt
fi


# cleanup

echo -n -e "cleanup\n"


rm -f $outDir/temp* &
rm -f $outDir/*sam &
#rm -f  $outDir/tag*fastq0* $outDir/ids_* &
#rm -rf $outDir/*REF* &
rm -rf $outDir/nv* &
rm -rf $outDir/*fastq &
rm -rf $outDir/tag* &
rm -rf $outDir/chr6region* &
rm -rf $outDir/merged* &
rm -rf $outDir/counts* &
rm -f $outDir/*lik1 $outDir/*lik2 &

